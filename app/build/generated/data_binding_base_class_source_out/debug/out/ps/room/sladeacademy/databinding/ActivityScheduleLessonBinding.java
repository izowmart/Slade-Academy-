// Generated by view binder compiler. Do not edit!
package ps.room.sladeacademy.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.Spinner;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import com.google.android.material.appbar.AppBarLayout;
import com.google.android.material.appbar.MaterialToolbar;
import com.google.android.material.button.MaterialButton;
import com.google.android.material.button.MaterialButtonToggleGroup;
import com.google.android.material.card.MaterialCardView;
import de.hdodenhof.circleimageview.CircleImageView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import ps.room.sladeacademy.R;

public final class ActivityScheduleLessonBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final Spinner classSpinner;

  @NonNull
  public final TextView classText;

  @NonNull
  public final Button friBtn;

  @NonNull
  public final Button monBtn;

  @NonNull
  public final AppBarLayout scheduleAppbar;

  @NonNull
  public final MaterialButton scheduleBtn;

  @NonNull
  public final MaterialCardView scheduleLessonProfileCard;

  @NonNull
  public final MaterialToolbar scheduleToolbar;

  @NonNull
  public final TextView sessionText;

  @NonNull
  public final TextView teacherEmail;

  @NonNull
  public final CircleImageView teacherImgProfile;

  @NonNull
  public final TextView teacherProfession;

  @NonNull
  public final TextView teacherProfileName;

  @NonNull
  public final Button teuBtn;

  @NonNull
  public final Button thuBtn;

  @NonNull
  public final Spinner timeSpinner;

  @NonNull
  public final TextView timeTxt;

  @NonNull
  public final MaterialButtonToggleGroup toggleButton;

  @NonNull
  public final Button wedBtn;

  private ActivityScheduleLessonBinding(@NonNull ConstraintLayout rootView,
      @NonNull Spinner classSpinner, @NonNull TextView classText, @NonNull Button friBtn,
      @NonNull Button monBtn, @NonNull AppBarLayout scheduleAppbar,
      @NonNull MaterialButton scheduleBtn, @NonNull MaterialCardView scheduleLessonProfileCard,
      @NonNull MaterialToolbar scheduleToolbar, @NonNull TextView sessionText,
      @NonNull TextView teacherEmail, @NonNull CircleImageView teacherImgProfile,
      @NonNull TextView teacherProfession, @NonNull TextView teacherProfileName,
      @NonNull Button teuBtn, @NonNull Button thuBtn, @NonNull Spinner timeSpinner,
      @NonNull TextView timeTxt, @NonNull MaterialButtonToggleGroup toggleButton,
      @NonNull Button wedBtn) {
    this.rootView = rootView;
    this.classSpinner = classSpinner;
    this.classText = classText;
    this.friBtn = friBtn;
    this.monBtn = monBtn;
    this.scheduleAppbar = scheduleAppbar;
    this.scheduleBtn = scheduleBtn;
    this.scheduleLessonProfileCard = scheduleLessonProfileCard;
    this.scheduleToolbar = scheduleToolbar;
    this.sessionText = sessionText;
    this.teacherEmail = teacherEmail;
    this.teacherImgProfile = teacherImgProfile;
    this.teacherProfession = teacherProfession;
    this.teacherProfileName = teacherProfileName;
    this.teuBtn = teuBtn;
    this.thuBtn = thuBtn;
    this.timeSpinner = timeSpinner;
    this.timeTxt = timeTxt;
    this.toggleButton = toggleButton;
    this.wedBtn = wedBtn;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityScheduleLessonBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityScheduleLessonBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_schedule_lesson, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityScheduleLessonBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.class_spinner;
      Spinner classSpinner = rootView.findViewById(id);
      if (classSpinner == null) {
        break missingId;
      }

      id = R.id.class_text;
      TextView classText = rootView.findViewById(id);
      if (classText == null) {
        break missingId;
      }

      id = R.id.fri_btn;
      Button friBtn = rootView.findViewById(id);
      if (friBtn == null) {
        break missingId;
      }

      id = R.id.mon_btn;
      Button monBtn = rootView.findViewById(id);
      if (monBtn == null) {
        break missingId;
      }

      id = R.id.schedule_appbar;
      AppBarLayout scheduleAppbar = rootView.findViewById(id);
      if (scheduleAppbar == null) {
        break missingId;
      }

      id = R.id.schedule_btn;
      MaterialButton scheduleBtn = rootView.findViewById(id);
      if (scheduleBtn == null) {
        break missingId;
      }

      id = R.id.schedule_lesson_profile_card;
      MaterialCardView scheduleLessonProfileCard = rootView.findViewById(id);
      if (scheduleLessonProfileCard == null) {
        break missingId;
      }

      id = R.id.schedule_toolbar;
      MaterialToolbar scheduleToolbar = rootView.findViewById(id);
      if (scheduleToolbar == null) {
        break missingId;
      }

      id = R.id.session_text;
      TextView sessionText = rootView.findViewById(id);
      if (sessionText == null) {
        break missingId;
      }

      id = R.id.teacher_email;
      TextView teacherEmail = rootView.findViewById(id);
      if (teacherEmail == null) {
        break missingId;
      }

      id = R.id.teacher_img_profile;
      CircleImageView teacherImgProfile = rootView.findViewById(id);
      if (teacherImgProfile == null) {
        break missingId;
      }

      id = R.id.teacher_profession;
      TextView teacherProfession = rootView.findViewById(id);
      if (teacherProfession == null) {
        break missingId;
      }

      id = R.id.teacher_profile_name;
      TextView teacherProfileName = rootView.findViewById(id);
      if (teacherProfileName == null) {
        break missingId;
      }

      id = R.id.teu_btn;
      Button teuBtn = rootView.findViewById(id);
      if (teuBtn == null) {
        break missingId;
      }

      id = R.id.thu_btn;
      Button thuBtn = rootView.findViewById(id);
      if (thuBtn == null) {
        break missingId;
      }

      id = R.id.time_spinner;
      Spinner timeSpinner = rootView.findViewById(id);
      if (timeSpinner == null) {
        break missingId;
      }

      id = R.id.time_txt;
      TextView timeTxt = rootView.findViewById(id);
      if (timeTxt == null) {
        break missingId;
      }

      id = R.id.toggleButton;
      MaterialButtonToggleGroup toggleButton = rootView.findViewById(id);
      if (toggleButton == null) {
        break missingId;
      }

      id = R.id.wed_btn;
      Button wedBtn = rootView.findViewById(id);
      if (wedBtn == null) {
        break missingId;
      }

      return new ActivityScheduleLessonBinding((ConstraintLayout) rootView, classSpinner, classText,
          friBtn, monBtn, scheduleAppbar, scheduleBtn, scheduleLessonProfileCard, scheduleToolbar,
          sessionText, teacherEmail, teacherImgProfile, teacherProfession, teacherProfileName,
          teuBtn, thuBtn, timeSpinner, timeTxt, toggleButton, wedBtn);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
